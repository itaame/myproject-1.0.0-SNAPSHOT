async function u(t){let s=[],i=t.items;if(i&&i.length&&i[0].webkitGetAsEntry){let e=[];for(let l=0;l<i.length;l++){let r=i[l].webkitGetAsEntry();r&&e.push(r)}for(let l of e){let r=await c(l);s.push(...r)}}else for(let e=0;e<t.files.length;e++){let l=t.files.item(e);s.push(l)}return s}async function c(t,s=""){let i=[],e=s?`${s}/${t.name}`:t.name;if(t.isFile){let r=await h(t);r._fullPath=e,i.push(r)}else if(t.isDirectory){let l=t,r=[],o=l.createReader(),n=await a(o);for(;n.length;)r.push(...n),n=await a(o);for(let F of r){let y=await c(F,e);i.push(...y)}}return i}function h(t){return new Promise((s,i)=>{t.file(e=>{s(e)},e=>i(e))})}function a(t){return new Promise((s,i)=>{t.readEntries(e=>{s(e)},e=>i(e))})}export{u as a};
